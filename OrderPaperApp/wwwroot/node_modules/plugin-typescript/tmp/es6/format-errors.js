import ts from 'typescript';
export function convertErrors(diags) {
    return diags.reduce(function (result, diag) {
        var locationText = undefined;
        if (diag.file) {
            var position = diag.file.getLineAndCharacterOfPosition(diag.start);
            var filename = diag.file.fileName;
            locationText = filename + ":" + (position.line + 1) + ":" + (position.character + 1);
        }
        var messageText = ts.flattenDiagnosticMessageText(diag.messageText, "\n");
        messageText = messageText + " (TS" + diag.code + ")";
        result.push({
            messageText: messageText,
            locationText: locationText,
            category: diag.category,
            errorCode: diag.code
        });
        return result;
    }, []);
}
export function outputErrors(errors, logger) {
    errors.slice(0, 10).forEach(function (error) {
        var write = (error.category === ts.DiagnosticCategory.Error) ? logger.error : logger.warn;
        if (error.locationText)
            write(error.locationText);
        write(error.messageText);
    });
}
export function formatErrors(diags, logger) {
    var errors = convertErrors(diags);
    outputErrors(errors, logger);
}
